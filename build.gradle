plugins {
    id 'org.springframework.boot' version '2.7.9'  // Update to latest stable version
    id 'io.spring.dependency-management' version '1.1.3'
    id 'java'
    id 'application'
    id 'jacoco'  // Add this line to apply the JaCoCo plugin

}

group = 'com.example'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

repositories {
    mavenCentral()
}

dependencies {
    // Spring Boot Starter
    implementation 'org.springframework.boot:spring-boot-starter'

    // AWS SDK for SQS and CloudWatch
    implementation 'software.amazon.awssdk:sqs:2.20.0'
    implementation 'software.amazon.awssdk:cloudwatch:2.20.0'

    // JSON handling
    implementation 'com.google.code.gson:gson:2.8.8'

    // Logging (Spring Boot's default is Logback, but can include external dependencies if needed)
    implementation 'org.springframework.boot:spring-boot-starter-logging'  // Ensure logging is included (optional, since itâ€™s included by default)

    // Spring Boot Starter for Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    // Mockito for testing
    testImplementation 'org.mockito:mockito-core:5.2.0'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.2.0'

    // Lombok for reducing boilerplate code (optional)
    implementation 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Spring Boot DevTools (Optional - for development-time support)
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // AWS SDK for CloudWatch Logs
    implementation 'com.amazonaws:aws-java-sdk-logs:1.12.293' // or latest version
    // implementation 'com.amazonaws:aws-java-sdk-core:1.12.293' 

    // // // Logback CloudWatch Appender
    implementation 'com.lightstreamer:cloudwatch-logback-appender:0.11.0'


}

mainClassName = 'com.example.fraud.application.FraudDetectionApplication' // Specify the main class

jacoco {
    toolVersion = "0.8.7"  // You can specify the JaCoCo version you want
}

test {
    useJUnitPlatform() // If you are using JUnit 5, otherwise use the default for JUnit 4
    finalizedBy jacocoTestReport // Ensures that the test report is generated after tests
}

jacocoTestReport {
    reports {
        html.required = true
    }
}