# Kubernetes Secret for AWS Credentials
apiVersion: v1
kind: Secret
metadata:
  name: aws-credentials
type: Opaque
data:       # setup AWS credentials and region
  XXX: XXX  # Base64 encoded value for "AWS ACCESS KEY ID"
  XXX: XXX  # Base64 encoded value for "AWS SECRET ACCESS KEY"
  XXX: XXX  # Base64 encoded value for "AWS REGION"

---
# Kubernetes Deployment for Fraud Detection Application
apiVersion: apps/v1
kind: Deployment
metadata:
  name: fraud-detection-application
spec:
  replicas: 3
  selector:
    matchLabels:
      app: fraud-detection
  template:
    metadata:
      labels:
        app: fraud-detection
    spec:
      hostNetwork: true  # Use the host's network
      containers:
        - name: fraud-detection
          image: fraud-detection-application:latest  # Replace with your image name
          imagePullPolicy: IfNotPresent
          envFrom:
            - secretRef:
                name: aws-credentials  # Reference the created secret here
          ports:
            - containerPort: 8080
          resources:
            requests:
              cpu: "500m"
              memory: "256Mi"
            limits:
              cpu: "1000m"
              memory: "512Mi"

---
# Kubernetes Service for Fraud Detection Application
apiVersion: v1
kind: Service
metadata:
  name: fraud-detection-application
spec:
  selector:
    app: fraud-detection
  ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
  type: ClusterIP  # Default Service Type for internal communication

---
# Horizontal Pod Autoscaler for Fraud Detection Application
apiVersion: autoscaling/v2beta2
kind: HorizontalPodAutoscaler
metadata:
  name: fraud-detection-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: fraud-detection-application
  minReplicas: 3
  maxReplicas: 10
  metrics:
    - type: Resource
      resource:
        name: cpu
        target:
          type: Utilization
          averageUtilization: 50

---
# Network Policy to allow all outbound traffic
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: allow-all-egress
  namespace: default
spec:
  podSelector: {}  # Select all pods
  policyTypes:
    - Egress
  egress:
    - to:
        - ipBlock:
            cidr: 0.0.0.0/0  # Allow all outbound traffic
